#	Example:
#
#	example_effect = {
#		add_political_power = 66
#		add_popularity = {
#			ideology = fascism
#			popularity = 0.33
#		}
#	}
#
#
#	In a script file:
#
#	effect = {
#		example_effect = yes
#	}
#

##########################################
###      Split Equipment Effect       ####
##########################################

#PREV gains equipment from THIS
#TARGET = {
#	ROOT = {
#		split_equipment_half = yes
#	}	
#}
split_equipment_half = {
	set_variable = {
		var = convoy_var
		value = num_equipment@convoy
	}
	multiply_variable = {
		var = convoy_var
		value = 0.5
	}
	send_equipment = {
		type = convoy
		amount = convoy_var
		target = PREV
	}
	if = {
		limit = { has_tech = arquebus_weapons }
		set_variable = {
			var = firearms_var
			value = num_equipment@firearm_equipment
		}
		multiply_variable = {
			var = firearms_var
			value = 0.5
		}
		send_equipment = {
			type = firearm_equipment
			amount = firearms_var
			target = PREV
		}
	}
	if = {
		limit = { has_tech = pike_weapons }
		set_variable = {
			var = pikes_var
			value = num_equipment@pike_equipment
		}
		multiply_variable = {
			var = pikes_var
			value = 0.5
		}
		send_equipment = {
			type = pike_equipment
			amount = pikes_var
			target = PREV
		}
	}
	if = {
		limit = { has_tech = light_artillery_1 }
		set_variable = {
			var = lcannon_var
			value = num_equipment@light_artillery_equipment
		}
		multiply_variable = {
			var = lcannon_var
			value = 0.5
		}
		send_equipment = {
			type = light_artillery_equipment
			amount = lcannon_var
			target = PREV
		}
	}
	if = {
		limit = { has_tech = heavy_artillery_1 }
		set_variable = {
			var = hcannon_var
			value = num_equipment@heavy_artillery_equipment
		}
		multiply_variable = {
			var = hcannon_var
			value = 0.5
		}
		send_equipment = {
			type = heavy_artillery_equipment
			amount = hcannon_var
			target = PREV
		}
	}
	if = {
		limit = { has_tech = apc_tech_0 }
		set_variable = {
			var = apc_var
			value = num_equipment@apc_equipment
		}
		multiply_variable = {
			var = apc_var
			value = 0.5
		}
		send_equipment = {
			type = apc_equipment
			amount = apc_var
			target = PREV
		}
	}
	if = {
		limit = { has_tech = early_gas_tank }
		set_variable = {
			var = gas_tank_var
			value = num_equipment@gas_tank_equipment
		}
		multiply_variable = {
			var = gas_tank_var
			value = 0.5
		}
		send_equipment = {
			type = gas_tank_equipment
			amount = gas_tank_var
			target = PREV
		}
	}
	if = {
		limit = { has_tech = early_steam_tank }
		set_variable = {
			var = steam_tank_var
			value = num_equipment@steam_tank_equipment
		}
		multiply_variable = {
			var = steam_tank_var
			value = 0.5
		}
		send_equipment = {
			type = steam_tank_equipment
			amount = steam_tank_var
			target = PREV
		}
	}
	if = {
		limit = { has_tech = motorised_infantry }
		set_variable = {
			var = motorized_var
			value = num_equipment@motorized_equipment
		}
		multiply_variable = {
			var = motorized_var
			value = 0.5
		}
		send_equipment = {
			type = motorized_equipment
			amount = motorized_var
			target = PREV
		}
	}
	if = {
		limit = { has_tech = tech_support }
		set_variable = {
			var = support_var
			value = num_equipment@support_equipment
		}
		multiply_variable = {
			var = support_var
			value = 0.5
		}
		send_equipment = {
			type = support_equipment
			amount = support_var
			target = PREV
		}
	}
	if = {
		limit = { has_tech = antiair1 }
		set_variable = {
			var = aa_var
			value = num_equipment@anti_air_equipment
		}
		multiply_variable = {
			var = aa_var
			value = 0.5
		}
		send_equipment = {
			type = anti_air_equipment
			amount = aa_var
			target = PREV
		}
	}
	if = {
		limit = { has_tech = antitank1 }
		set_variable = {
			var = at_var
			value = num_equipment@anti_tank_equipment
		}
		multiply_variable = {
			var = at_var
			value = 0.5
		}
		send_equipment = {
			type = anti_tank_equipment
			amount = at_var
			target = PREV
		}
	}
}

##########################################
###      Change State Category        ####
##########################################

increase_state_category = {
	if = {
		limit = {
			has_state_category = megalopolis
			free_building_slots = {
				building = industrial_complex
				size < 1
				include_locked = yes
			}
		}
		add_political_power = 20
	}
	else_if = {
		limit = {
			has_state_category = megalopolis
			free_building_slots = {
				building = industrial_complex
				size > 0
				include_locked = yes
			}
		}
		add_extra_state_shared_building_slots = 1
	}
	else_if = {
		limit = {
			has_state_category = metropolis
		}
		set_state_category = megalopolis
	}
	else_if = {
		limit = {
			has_state_category = large_city
		}
		set_state_category = metropolis
	}
	else_if = {
		limit = {
			has_state_category = city
		}
		set_state_category = large_city
	}
	else_if = {
		limit = {
			has_state_category = large_town
		}
		set_state_category = city
	}
	else_if = {
		limit = {
			has_state_category = town
		}
		set_state_category = large_town
	}
	else_if = {
		limit = {
			has_state_category = rural
		}
		set_state_category = town
	}
	else_if = {
		limit = {
			has_state_category = pastoral
		}
		set_state_category = rural
	}
	else_if = {
		limit = {
			has_state_category = wasteland
		}
		set_state_flag = was_wasteland
		set_state_category = pastoral
	}
	else_if = {
		limit = {
			has_state_category = enclave
		}
		set_state_flag = was_enclave
		set_state_category = pastoral
	}
	else_if = {
		limit = {
			has_state_category = small_island
		}
		set_state_flag = was_island
		set_state_category = rural
	}
	else_if = {
		limit = {
			has_state_category = tiny_island
		}
		set_state_category = small_island
	}
}

reduce_state_category = {
	if = {
		limit = {
			OR = {
				has_state_category = enclave
				has_state_category = wasteland
				has_state_category = tiny_island
			}
		}
		add_political_power = -20
	}
	else_if = {
		limit = {
			has_state_category = small_island
		}
		set_state_category = tiny_island
	}
	else_if = {
		limit = {
			has_state_category = pastoral
			has_state_flag = was_enclave
		}
		set_state_category = enclave
	}
	else_if = {
		limit = {
			has_state_category = pastoral
			has_state_flag = was_wasteland
		}
		set_state_category = wasteland
	}
	else_if = {
		limit = {
			has_state_category = rural
			has_state_flag = was_island
		}
		set_state_category = small_island
	}
	else_if = {
		limit = {
			has_state_category = rural
		}
		set_state_category = pastoral
	}
	else_if = {
		limit = {
			has_state_category = town
		}
		set_state_category = rural
	}
	else_if = {
		limit = {
			has_state_category = large_town
		}
		set_state_category = town
	}
	else_if = {
		limit = {
			has_state_category = city
		}
		set_state_category = large_town
	}
	else_if = {
		limit = {
			has_state_category = large_city
		}
		set_state_category = city
	}
	else_if = {
		limit = {
			has_state_category = metropolis
		}
		set_state_category = large_city
	}
	else_if = {
		limit = {
			has_state_category = megalopolis
		}
		set_state_category = metropolis
	}
}

##########################################
### Check for CoC vars and apply idea ####
##########################################

#From scope of (original country)
clear_CoC_vars_and_flags = {
	clear_variable = THIS.CoC_agitating_progress
	clear_variable = THIS.CoC_agitated_state_var
	clear_variable = THIS.CoC_annex_cost

	var:THIS.CoC_agitating = {
		#add_political_power = 100
			remove_targeted_decision = { target = PREV decision = CoC_agitate_state_warning }
			remove_targeted_decision = { target = PREV decision = CoC_agitate_progress_warning }
			remove_targeted_decision = { target = PREV decision = CoC_agitate_state_counter }
		PREV = {
		#add_political_power = 50
			remove_targeted_decision = { target = PREV decision = CoC_agitate_state_continue }
			remove_targeted_decision = { target = PREV decision = CoC_agitate_state_annex }
			remove_targeted_decision = { target = PREV decision = CoC_agitate_progress }
			remove_targeted_decision = { target = PREV decision = CoC_border_conflict_start }
		}
	}
	clear_variable = THIS.CoC_agitating
	hidden_effect = {
		every_country = {
			limit = { has_variable = CoC_agitated_by }
			clear_variable = CoC_agitated_by
			#add_political_power = 10
			remove_targeted_decision = { target = PREV decision = CoC_agitate_state_warning }
			remove_targeted_decision = { target = PREV decision = CoC_agitate_progress_warning }
			remove_targeted_decision = { target = PREV decision = CoC_agitate_state_counter }
			PREV = {
			#add_political_power = 5
				remove_targeted_decision = { target = PREV decision = CoC_agitate_state_continue }
				remove_targeted_decision = { target = PREV decision = CoC_agitate_state_annex }
				remove_targeted_decision = { target = PREV decision = CoC_agitate_progress }
				remove_targeted_decision = { target = PREV decision = CoC_border_conflict_start }
			}
		}
		every_state = {
			limit = { has_state_flag = CoC_agitating_by_@PREV }
			clr_state_flag = CoC_agitating_by_@PREV
		}
	}
}
#Strength 20-15-10-5-0
#Anger 10-5-0-0-5-10
check_CoC_strength_anger = {
	multiply_variable = { CoC_anger = 2 }
	multiply_variable = { CoC_strength = 2 }
	set_variable = { templib = party_popularity@liberal } #0-1
	set_variable = { temprad = party_popularity@radical } #0-1
	set_variable = { tempcon = party_popularity@constitutionalist } #0-1
	set_variable = { tempabs = party_popularity@absolutist } #0-1
	multiply_variable = { templib = -5 } #0 to -2.5
	multiply_variable = { temprad = -10 } #0 to -5
	multiply_variable = { tempcon = 5 } #0 to 2.5
	multiply_variable = { tempabs = 10 } #0 to 5
	add_to_variable = { CoC_anger = templib }
	add_to_variable = { CoC_anger = temprad }
	add_to_variable = { CoC_anger = tempcon }
	add_to_variable = { CoC_anger = tempabs }
	add_to_variable = { CoC_strength = tempabs }
	subtract_from_variable = { CoC_strength = temprad }
	add_to_variable = { CoC_strength = templib }
	subtract_from_variable = { CoC_strength = tempcon }
	if = {
		limit = { has_idea = persecute_minorities }
		add_to_variable = { CoC_anger = 10 }
		add_to_variable = { CoC_strength = 5 }
	}
	if = {
		limit = { has_idea = state_religion_law }
		add_to_variable = { CoC_anger = 5 }
		add_to_variable = { CoC_strength = 2 }
	}
	if = {
		limit = { has_idea = freedom_of_religion }
		add_to_variable = { CoC_anger = -5 }
		add_to_variable = { CoC_strength = -2 }
	}
	if = {
		limit = { has_war = no has_idea = full_civilian_eco }
		add_to_variable = { CoC_anger = -10 }
		add_to_variable = { CoC_strength = -5 }
	}
	if = {
		limit = { has_war = no has_idea = civilian_focus_eco }
		add_to_variable = { CoC_anger = -5 }
		add_to_variable = { CoC_strength = -2 }
	}
	if = {
		limit = { has_war = no has_idea = military_focus_eco }
		add_to_variable = { CoC_anger = 5 }
		add_to_variable = { CoC_strength = 2 }
	}
	if = {
		limit = { has_war = no has_idea = levy_army }
		add_to_variable = { CoC_anger = 5 }
		add_to_variable = { CoC_strength = 2 }
	}
	if = {
		limit = { has_war = no has_idea = full_military_eco }
		add_to_variable = { CoC_anger = 10 }
		add_to_variable = { CoC_strength = 5 }
	}
	if = {
		limit = { has_war = no has_idea = drafted_army }
		add_to_variable = { CoC_anger = 10 }
		add_to_variable = { CoC_strength = 5 }
	}
	#if = {
	#	limit = { has_government = absolutist }
	#	add_to_variable = { CoC_anger = 5 }
	#	add_to_variable = { CoC_strength = 2.5 }
	#}
	#if = {
	#	limit = { has_government = constitutionalist }
	#	add_to_variable = { CoC_anger = 2.5 }
	#	add_to_variable = { CoC_strength = 1 }
	#}
	#if = {
	#	limit = { has_government = radical }
	#	add_to_variable = { CoC_anger = -5 }
	#	add_to_variable = { CoC_strength = -2.5 }
	#}
	#if = {
	#	limit = { has_government = liberal }
	#	add_to_variable = { CoC_anger = -2.5 }
	#	add_to_variable = { CoC_strength = -1 }
	#}
	round_variable = CoC_anger
	round_variable = CoC_strength
	divide_variable = { CoC_anger = 2 }
	divide_variable = { CoC_strength = 2 }
	clamp_variable = { var = CoC_anger min = -20 max = 20 }
	clamp_variable = { var = CoC_strength min = -10 max = 30 }
	if = {
		limit = { has_country_flag = CoC_banned }
		clamp_variable = { var = CoC_strength min = -10 max = 10 }
	}
	#clear_variable = templib
	#clear_variable = temprad
	#clear_variable = tempcon
	#clear_variable = tempabs
}
check_CoC_effects_for_this = {
	remove_ideas = Coc_good_4
	remove_ideas = CoC_good_3
	remove_ideas = CoC_good_2
	remove_ideas = CoC_good_1
	remove_ideas = CoC_bad_1
	remove_ideas = Coc_bad_2
	remove_ideas = CoC_bad_3
	remove_ideas = CoC_bad_4

	if = { #dominant
		limit = {
			check_variable = { var = CoC_strength value = 20 compare = greater_than_or_equals }
		}
		if = { #ecstatic
			limit = {
				check_variable = { var = CoC_anger value = -10 compare = less_than }
			}
			add_ideas = Coc_good_4 #max
		}
		else_if = { #happy
			limit = {
				check_variable = { var = CoC_anger value = -10 compare = greater_than_or_equals }
				check_variable = { var = CoC_anger value = -5 compare = less_than }
			}
			add_ideas = CoC_good_3 #max-1
		}
		else_if = { #pleased
			limit = {
				check_variable = { var = CoC_anger value = -5 compare = greater_than_or_equals }
				check_variable = { var = CoC_anger value = 0 compare = less_than }
			}
			add_ideas = CoC_good_2 #max-2
		}
		else_if = { #displeased
			limit = {
				check_variable = { var = CoC_anger value = 0 compare = greater_than_or_equals }
				check_variable = { var = CoC_anger value = 5 compare = less_than }
			}
			add_ideas = CoC_bad_2 #max-2
		}
		else_if = { #angry
			limit = {
				check_variable = { var = CoC_anger value = 5 compare = greater_than_or_equals }
				check_variable = { var = CoC_anger value = 10 compare = less_than }
			}
			add_ideas = CoC_bad_3 #max-1
		}
		else_if = { #furious
			limit = {
				check_variable = { var = CoC_anger value = 10 compare = greater_than_or_equals }
			}
			add_ideas = CoC_bad_4 #max
		}

	}
	else_if = { #strong
		limit = {
			check_variable = { var = CoC_strength value = 15 compare = greater_than_or_equals }
			check_variable = { var = CoC_strength value = 20 compare = less_than }
		}
		if = { #ecstatic
			limit = {
				check_variable = { var = CoC_anger value = -10 compare = less_than }
			}
			add_ideas = Coc_good_3 #max-1
		}
		else_if = { #happy
			limit = {
				check_variable = { var = CoC_anger value = -10 compare = greater_than_or_equals }
				check_variable = { var = CoC_anger value = -5 compare = less_than }
			}
			add_ideas = CoC_good_2 #max-2
		}
		else_if = { #pleased
			limit = {
				check_variable = { var = CoC_anger value = -5 compare = greater_than_or_equals }
				check_variable = { var = CoC_anger value = 0 compare = less_than }
			}
			add_ideas = CoC_good_1 #max-3
		}
		else_if = { #displeased
			limit = {
				check_variable = { var = CoC_anger value = 0 compare = greater_than_or_equals }
				check_variable = { var = CoC_anger value = 5 compare = less_than }
			}
			add_ideas = CoC_bad_1 #max-3
		}
		else_if = { #angry
			limit = {
				check_variable = { var = CoC_anger value = 5 compare = greater_than_or_equals }
				check_variable = { var = CoC_anger value = 10 compare = less_than }
			}
			add_ideas = CoC_bad_2 #max-2
		}
		else_if = { #furious
			limit = {
				check_variable = { var = CoC_anger value = 10 compare = greater_than_or_equals }
			}
			add_ideas = CoC_bad_3 #max-1
		}

	}
	else_if = { #influential
		limit = {
			check_variable = { var = CoC_strength value = 10 compare = greater_than_or_equals }
			check_variable = { var = CoC_strength value = 15 compare = less_than }
		}
		if = { #ecstatic
			limit = {
				check_variable = { var = CoC_anger value = -10 compare = less_than }
			}
			add_ideas = Coc_good_2 #max-1
		}
		else_if = { #happy
			limit = {
				check_variable = { var = CoC_anger value = -10 compare = greater_than_or_equals }
				check_variable = { var = CoC_anger value = -5 compare = less_than }
			}
			add_ideas = CoC_good_1 #max-2
		}
		else_if = { #angry
			limit = {
				check_variable = { var = CoC_anger value = 5 compare = greater_than_or_equals }
				check_variable = { var = CoC_anger value = 10 compare = less_than }
			}
			add_ideas = CoC_bad_1 #max-2
		}
		else_if = { #furious
			limit = {
				check_variable = { var = CoC_anger value = 10 compare = greater_than_or_equals }
			}
			add_ideas = CoC_bad_2 #max-1
		}

	}
	else_if = { #weak
		limit = {
			check_variable = { var = CoC_strength value = 5 compare = greater_than_or_equals }
			check_variable = { var = CoC_strength value = 10 compare = less_than }
		}
		if = { #ecstatic
			limit = {
				check_variable = { var = CoC_anger value = -10 compare = less_than }
			}
			add_ideas = Coc_good_1 #max-1
		}
		else_if = { #furious
			limit = {
				check_variable = { var = CoC_anger value = 10 compare = greater_than_or_equals }
			}
			add_ideas = CoC_bad_1 #max-1
		}

	}
}
