#Strength 20-15-10-5-0
#Anger 10-5-0-0-5-10
RoF_CoC_decisions = {
	ban_CoC = {
		available = {
			has_country_flag = CoC_present
			NOT = { has_country_flag = CoC_banned }
			custom_trigger_tooltip = {
				tooltip = CoC_strength_under_10.tt
				check_variable = { var = CoC_strength value = 10 compare = less_than_or_equals }
			}
		}
		visible = {
			NOT = { has_country_flag = CoC_banned }
		}
		complete_effect = {
			set_country_flag = CoC_banned
			custom_effect_tooltip = RoF_ban_CoC.tt
			set_variable = { var = CoC_strength value = 0 }
			add_to_variable = { var = CoC_anger value = 10 }
			hidden_effect = {
				check_CoC_effects_for_this = yes
			}
		}
		cost = 100
		ai_will_do = {
			factor = 0
			modifier = {
				add = 10
				has_political_power > 100
				OR = {
					has_government = absolutist
					has_government = constitutionalist
					has_government = neutrality
				}
				check_variable = { var = CoC_anger value = 5 compare = greater_than_or_equals }
			}
			modifier = {
				add = 10
				OR = {
					has_government = absolutist
					has_government = constitutionalist
					has_government = neutrality
				}
				check_variable = { var = CoC_strength value = 10 compare = less_than_or_equals }
			}
		}
	}
	allow_CoC = {
		available = {
			has_country_flag = CoC_present
			has_country_flag = CoC_banned
		}
		visible = {
			has_country_flag = CoC_banned
		}
		complete_effect = {
			clr_country_flag = CoC_banned
			custom_effect_tooltip = RoF_unban_CoC.tt
			add_to_variable = { var = CoC_strength value = 5 }
			add_to_variable = { var = CoC_anger value = -5 }
			hidden_effect = {
				check_CoC_effects_for_this = yes
			}
		}
		cost = 25
		ai_will_do = {
			factor = 0
			modifier = {
				add = 1
				has_political_power > 100
				OR = {
					has_government = radical
					has_government = liberal
				}
			}
		}
	}
	encourage_CoC = {
		available = {
			has_country_flag = CoC_present
			NOT = { has_country_flag = CoC_banned }
			custom_trigger_tooltip = {
				tooltip = CoC_strength_under_20.tt
				check_variable = { var = CoC_strength value = 20 compare = less_than_or_equals }
			}
		}
		visible = {
			NOT = { has_country_flag = CoC_banned }
		}
		complete_effect = {
			add_to_variable = { var = CoC_strength value = 5 }
			add_to_variable = { var = CoC_anger value = -5 }
			if = {
				limit = {
					radical < 0.3
				}
				add_popularity = {
					ideology = radical
					popularity = 0.05
				}
			}
			custom_effect_tooltip = RoF_strengthen_CoC.tt
			hidden_effect = {
				check_CoC_effects_for_this = yes
			}
		}
		cost = 25
		days_re_enable = 30
		ai_will_do = {
			factor = 0
			modifier = {
				add = 1
				has_political_power > 100
				OR = {
					has_government = radical
					has_government = liberal
				}
			}
		}
	}
	suppress_CoC = {
		visible = {
			check_variable = { var = CoC_strength value = 0 compare = greater_than_or_equals }
		}
		available = {
			has_country_flag = CoC_present
			custom_trigger_tooltip = {
				tooltip = CoC_strength_over_0.tt
				check_variable = { var = CoC_strength value = 0 compare = greater_than_or_equals }
			}
		}
		complete_effect = {
			add_to_variable = { var = CoC_strength value = -10 }
			add_to_variable = { var = CoC_anger value = 10 }
			custom_effect_tooltip = RoF_weaken_CoC.tt
			hidden_effect = {
				check_CoC_effects_for_this = yes
			}
			if = {
				limit = {
					radical > 0.3
				}
				add_popularity = {
					ideology = radical
					popularity = -0.05
				}
			}

		}
		cost = 50
		days_re_enable = 30
		ai_will_do = {
			factor = 0
			modifier = {
				add = 10
				has_political_power > 100
				OR = {
					has_government = absolutist
					has_government = constitutionalist
					has_government = neutrality
				}
				NOT = { has_country_flag = CoC_banned }
			}
		}
	}
	accomodate_CoC = {
		available = {
			has_country_flag = CoC_present
			NOT = { has_country_flag = CoC_banned }
			custom_trigger_tooltip = {
				tooltip = accomodate_CoC.tt
				OR = {
					has_idea = persecute_minorities
					has_idea = state_religion_law
					AND = {
						has_war = no
						OR = {
							has_idea = military_focus_eco
							has_idea = full_military_eco
							has_idea = levy_army
							has_idea = drafted_army
						}
					}
					AND = {
						liberal < 0.3
						radical < 0.3
					}
					radical < 0.3
				}
			}
		}
		visible = {
			NOT = { has_country_flag = CoC_banned }
		}
		complete_effect = {
			country_event = { id = RoF_CoC.020 }
		}
		cost = 50
		days_re_enable = 30
		ai_will_do = {
			factor = 0
			modifier = {
				add = 1
				has_political_power > 100
				OR = {
					has_government = radical
					has_government = liberal
				}
			}
			modifier = {
				add = 1
				has_political_power > 100
				NOT = { has_government = absolutist }
				check_variable = { var = CoC_strength value = 10 compare = greater_than_or_equals }
				check_variable = { var = CoC_anger value = 10 compare = greater_than_or_equals }
			}
		}
	}
	establish_CoC_neighbor = {
		visible = {
			NOT = { has_country_flag = CoC_banned }
			has_country_flag = CoC_present
			any_neighbor_country = {
				NOT = {
					OR = {
						has_government = radical
						has_government = liberal
						has_country_flag = CoC_present
						has_idea = unorganized_territory_idea
					}
				}
			}
		}
		available = {
			any_neighbor_country = {
				NOT = {
					OR = {
						has_government = radical
						has_government = liberal
						has_country_flag = CoC_present
					}
				}
				capital_scope = {
					is_on_continent = europe
				}
			}
			custom_trigger_tooltip = {
				tooltip = establish_CoC_neighbor.tt
				check_variable = { var = CoC_strength value = 10 compare = greater_than_or_equals }
				check_variable = { var = CoC_anger value = 0 compare = less_than }
			}
		}
		complete_effect = {
			random_neighbor_country = {
				limit = {
					NOT = {
						OR = {
							has_government = radical
							has_government = liberal
							has_country_flag = CoC_present
							has_idea = unorganized_territory_idea
						}
					}
					capital_scope = {
						is_on_continent = europe
					}
				}
				country_event = { id = RoF.010 }
			}
		}
		cost = 100
		days_re_enable = 60
		ai_will_do = {
			factor = 0
			modifier = {
				add = 1
				has_political_power > 200
				has_government = liberal
			}
			modifier = {
				add = 10
				has_political_power > 200
				has_government = radical
			}
		}
	}
	explain_coc = {
		visible = {
			
		}
		available = {
			hidden_trigger = {
				always = no
			}	
		}
	}
}
RoF_CoC_covert_decisions = {
	support_foreign_CoC = {
		visible = {
			has_government = radical
			has_country_flag = CoC_present
			NOT = {
				has_country_flag = support_CoC_timer
			}
		}
		available = {
			FROM = {
				custom_trigger_tooltip = {
					tooltip = weak_CoC.tt
					check_variable = { var = CoC_strength value = 10 compare = less_than }
				}
			}
		}
		target_trigger = {
			FROM = {
				NOT = { has_government = radical }
				capital_scope = { is_on_continent = europe }
				has_country_flag = CoC_present
				is_neighbor_of = ROOT
				check_variable = { var = CoC_strength value = 10 compare = less_than }
				check_variable = { var = CoC_anger value = 0 compare = greater_than_or_equals }
			}
		}
		cost = 100
		days_remove = 10
		days_re_enable = 60
		complete_effect = {
			custom_effect_tooltip = support_foreign_CoC.tt
			FROM = {
				add_to_variable = { CoC_strength = 5 }
				hidden_effect = {
					check_CoC_effects_for_this = yes
				}		
			}
			set_country_flag = {
				flag = support_CoC_timer
				days = 60
				value = 1
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	incite_foreign_CoC = {
		visible = {
			has_government = radical
			has_country_flag = CoC_present
			NOT = {
				has_country_flag = incite_CoC_timer
			}
		}
		available = {
			FROM = {
				custom_trigger_tooltip = {
					tooltip = displeased_CoC.tt
					check_variable = { var = CoC_anger value = 5 compare = less_than }
				}
			}
		}
		target_trigger = {
			FROM = {
				NOT = { has_government = radical }
				capital_scope = { is_on_continent = europe }
				has_country_flag = CoC_present
				is_neighbor_of = ROOT
				check_variable = { var = CoC_strength value = 10 compare = less_than }
				check_variable = { var = CoC_anger value = 5 compare = less_than }
			}
		}
		cost = 100
		days_remove = 10
		days_re_enable = 60
		complete_effect = {
			custom_effect_tooltip = incite_foreign_CoC.tt
			FROM = {
				add_to_variable = { CoC_anger = 5 }
				hidden_effect = {
					check_CoC_effects_for_this = yes
				}		
			}
			set_country_flag = {
				flag = incite_CoC_timer
				days = 60
				value = 1
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	CoC_agitate_state_start = {
		visible = {
			has_government = radical
			has_country_flag = CoC_present
			NOT = { any_state = { has_state_flag = CoC_agitating_by_@ROOT } }
			hidden_trigger = {
				NOT = { has_country_flag = CoC_agitate_timer }
			}
		}
		available = {
			FROM = {
				custom_trigger_tooltip = {
					tooltip = CoC_agitate_neighbor_war.tt
					NOT = { has_war_with = ROOT }
					NOT = { is_in_faction_with = ROOT }
					NOT = { has_war_together_with = ROOT }
				}
			}
			FROM = {
				if = {
					limit = { has_government = absolutist }
					custom_trigger_tooltip = {
						tooltip = CoC_agitate_abs.tt
						has_government = absolutist
						check_variable = { var = CoC_strength value = 5 compare = greater_than_or_equals }
						check_variable = { var = CoC_anger value = -5 compare = greater_than_or_equals }
					}
				}
				if = {
					limit = { has_government = constitutionalist }
					custom_trigger_tooltip = {
						tooltip = CoC_agitate_con.tt
						has_government = constitutionalist
						check_variable = { var = CoC_strength value = 10 compare = greater_than_or_equals }
						check_variable = { var = CoC_anger value = 0 compare = greater_than_or_equals }
					}
				}
				if = {
					limit = { has_government = neutrality }
					custom_trigger_tooltip = {
						tooltip = CoC_agitate_neu.tt
						has_government = neutrality
						check_variable = { var = CoC_strength value = 10 compare = greater_than_or_equals }
						check_variable = { var = CoC_anger value = 0 compare = greater_than_or_equals }
					}
				}
				if = {
					limit = { has_government = liberal }
					custom_trigger_tooltip = {
						tooltip = CoC_agitate_lib.tt
						has_government = liberal
						check_variable = { var = CoC_strength value = 15 compare = greater_than_or_equals }
						check_variable = { var = CoC_anger value = 5 compare = greater_than_or_equals }
					}
				}
			}
			custom_trigger_tooltip = {
				tooltip = establish_CoC_neighbor.tt
				check_variable = { var = CoC_strength value = 10 compare = greater_than_or_equals }
				check_variable = { var = CoC_anger value = 0 compare = less_than }
			}
			any_state = {
				is_owned_and_controlled_by = FROM
				OR = {
					NOT = { is_capital = yes }
					FROM = { num_of_controlled_states < 2 }
				}
				any_neighbor_state = {
					is_owned_and_controlled_by = ROOT
					#set_temp_variable = { var:attacker_state_temp = id }
				}
				is_on_continent = europe
				set_temp_variable = { agitated_state_temp = id }
			}
		}
		target_trigger = {
			FROM = {
				NOT = { has_government = radical }
				capital_scope = { is_on_continent = europe }
				has_country_flag = CoC_present
				is_neighbor_of = ROOT
				check_variable = { var = CoC_strength value = 5 compare = greater_than_or_equals }
				check_variable = { var = CoC_anger value = -5 compare = greater_than_or_equals }
			}
		}
		highlight_states = {
			highlight_states_trigger = {
				OR = {
					has_state_flag = CoC_agitating_by_@ROOT
					state = FROM.defender_state_vs_@ROOT
					AND = {
						OR = {
							NOT = { is_capital = yes }
							FROM = { num_of_controlled_states < 2 }
						}
						is_on_continent = europe
						is_owned_and_controlled_by = FROM
						#hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
						any_neighbor_state = {
							#hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
							#has_ROOT_at_least_1_div_in_current_state_scope = yes
							is_owned_and_controlled_by = ROOT
						}
					}
				}
			}
		}
		cost = 100
		days_re_enable = 60
		complete_effect = {
			#effect_tooltip = {
			#	country_event = { id = RoF_CoC.010 hours = 1 }
			#}
			random_state = {
				limit = {
					is_on_continent = europe
					is_owned_and_controlled_by = FROM
					OR = {
						NOT = { is_capital = yes }
						FROM = { num_of_controlled_states < 2 }
					}
					any_neighbor_state = {
						is_fully_controlled_by = ROOT
					}
				}
				custom_effect_tooltip = CoC_agitate_target.tt
				hidden_effect = {
					set_state_flag = CoC_agitating_by_@ROOT
					set_variable = { ROOT.CoC_agitated_state_var = id }
					#FROM = { country_event = { id = RoF_CoC.0101 hours = 1 } }
					set_variable = { var = ROOT.CoC_agitating_progress value = 10 }
					set_variable = { ROOT.CoC_annex_cost = 200 }
					subtract_from_variable = { ROOT.CoC_annex_cost = ROOT.CoC_agitating_progress }
					clamp_variable = { var = ROOT.CoC_annex_cost min = 0 max = 100 }
					FROM = {
						set_variable = { ROOT.CoC_agitating = id }
						activate_targeted_decision = { target = ROOT decision = CoC_agitate_state_warning }
					}
					ROOT = {
						set_variable = { FROM.CoC_agitated_by = id }
						activate_targeted_decision = { target = FROM decision = CoC_agitate_progress }
						activate_targeted_decision = { target = FROM decision = CoC_agitate_state_continue }
						activate_targeted_decision = { target = FROM decision = CoC_agitate_state_annex }
					}
				}
			}
		}
	}
	CoC_agitate_state_warning = {
		allowed = { always = no }
		available = {
			hidden_trigger = { always = no }
		}
		highlight_states = { highlight_states_trigger = { state = var:FROM.CoC_agitated_state_var } }
		days_mission_timeout = 30
		fire_only_once = yes
		is_good = no
		timeout_effect = {
			activate_targeted_decision = { target = FROM decision = CoC_agitate_state_counter }
			activate_targeted_decision = { target = FROM decision = CoC_agitate_progress_warning }
			remove_targeted_decision = { target = FROM decision = CoC_agitate_state_warning }
		}
	}
	CoC_agitate_progress_warning = {
		allowed = { always = no }
		available = {
			hidden_trigger = { always = no }
		}
		highlight_states = { highlight_states_trigger = { state = var:FROM.CoC_agitated_state_var } }
		days_mission_timeout = 180
		fire_only_once = yes
		is_good = no
		timeout_effect = {
			remove_targeted_decision = { target = FROM decision = CoC_agitate_progress_warning }
		}
	}
	CoC_agitate_state_counter = {
		allowed = { always = no }
		available = {
			#hidden_trigger = { always = no }
		}
		highlight_states = { highlight_states_trigger = { state = var:FROM.CoC_agitated_state_var } }
		days_mission_timeout = 60
		cost = 150
		#fire_only_once = yes
		selectable_mission = yes
		days_remove = 7
		is_good = no
		complete_effect = {
			custom_effect_tooltip = CoC_agitate_counter_succeed.tt
			FROM = {
				country_event = { id = RoF_CoC.015 }
			}
			hidden_effect = {
				FROM = {
					clear_CoC_vars_and_flags = yes
				}
				remove_targeted_decision = { target = FROM decision = CoC_agitate_state_warning }
				remove_targeted_decision = { target = FROM decision = CoC_agitate_progress_warning }
				remove_targeted_decision = { target = FROM decision = CoC_agitate_state_counter }
			}
		}
		timeout_effect = {
			random_state = {
				limit = {
					has_state_flag = CoC_agitating_by_@FROM
				}
				custom_effect_tooltip = CoC_agitate_counter_fail.tt
				#save_event_target_as = agitated_state
			}
			hidden_effect = {
				add_to_variable = { FROM.CoC_agitating_progress = 20 }
				set_variable = { FROM.CoC_annex_cost = 200 }
				subtract_from_variable = { FROM.CoC_annex_cost = FROM.CoC_agitating_progress }
				clamp_variable = { var = FROM.CoC_annex_cost min = 0 max = 100 }
			}
		}
	}
	CoC_agitate_progress = {
		allowed = { always = no }
		available = {
			hidden_trigger = { always = no }
		}
		highlight_states = { highlight_states_trigger = { state = var:ROOT.CoC_agitated_state_var } }
		days_mission_timeout = 180
		fire_only_once = yes
		is_good = no
		timeout_effect = {
			clear_CoC_vars_and_flags = yes
			remove_targeted_decision = { target = FROM decision = CoC_agitate_progress }
		}
	}
	CoC_agitate_state_continue = {
		allowed = { always = no }
		visible = {
			has_variable = ROOT.CoC_agitating_progress
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = CoC_agitate_state_continue.tt
				check_variable = { var = ROOT.CoC_agitating_progress value = 10 compare = greater_than_or_equals }
				check_variable = { var = ROOT.CoC_agitating_progress value = 200 compare = less_than }
			}
		}
		#activation = {
		#	any_state = {
		#		has_state_flag = CoC_agitating_by_@ROOT
		#	}
		#}
		highlight_states = { highlight_states_trigger = { state = ROOT.CoC_agitated_state_var } }
		cancel_trigger = {

		}
		#fire_only_once = yes #Reactivation handled in effect
		cost = 25
		#days_re_enable = 1
		days_mission_timeout = 30
		selectable_mission = yes
		days_remove = 7
		complete_effect = {
			random_state = {
				limit = {
					has_state_flag = CoC_agitating_by_@ROOT
				}
				custom_effect_tooltip = CoC_agitate_continue_good.tt
				save_event_target_as = agitated_state
			}
			hidden_effect = {
				add_to_variable = { ROOT.CoC_agitating_progress = 10 }
				set_variable = { ROOT.CoC_annex_cost = 200 }
				subtract_from_variable = { ROOT.CoC_annex_cost = ROOT.CoC_agitating_progress }
				clamp_variable = { var = ROOT.CoC_annex_cost min = 0 max = 100 }
			}
			activate_targeted_decision = { target = FROM decision = CoC_agitate_state_continue }
		}
		remove_effect = {
			activate_targeted_decision = { target = FROM decision = CoC_agitate_state_continue }
		}
		timeout_effect = {
			random_state = {
				limit = {
					has_state_flag = CoC_agitating_by_@ROOT
				}
				custom_effect_tooltip = CoC_agitate_continue_bad.tt
				save_event_target_as = agitated_state
			}
			hidden_effect = {
				add_to_variable = { ROOT.CoC_agitating_progress = -10 }
				set_variable = { ROOT.CoC_annex_cost = 200 }
				subtract_from_variable = { ROOT.CoC_annex_cost = ROOT.CoC_agitating_progress }
				clamp_variable = { var = ROOT.CoC_annex_cost min = 0 max = 100 }
			}
			if = {
				limit = { check_variable = { var = ROOT.CoC_agitating_progress value = 10 compare = less_than_or_equals } }
				clear_CoC_vars_and_flags = yes
				#remove_targeted_decision = { target = FROM decision = CoC_agitate_state_continue }
			}
			else = {
				activate_targeted_decision = { target = FROM decision = CoC_agitate_state_continue }
			}
		}
		ai_will_do = {
			factor = 5
			modifier = {
				factor = 2
				check_variable = { ROOT.CoC_agitating_progress > 20 }
			}
			modifier = {
				factor = 0.5
				check_variable = { ROOT.CoC_agitating_progress > 99 }
			}
		}
	}

	CoC_agitate_state_annex = {
		allowed = {
			always = no
		}
		visible = {
			has_variable = ROOT.CoC_agitating_progress
		}
		highlight_states = { highlight_states_trigger = { state = ROOT.CoC_agitated_state_var } }
		custom_cost_trigger = {
			has_political_power > var:CoC_annex_cost
		}
		available = {
			check_variable = { ROOT.CoC_annex_cost < political_power }
			custom_trigger_tooltip = {
				tooltip = CoC_agitate_state_annex.tt
				check_variable = { var = ROOT.CoC_agitating_progress value = 100 compare = greater_than_or_equals }
			}
			custom_trigger_tooltip = {
				tooltip = establish_CoC_neighbor.tt
				check_variable = { var = CoC_strength value = 10 compare = greater_than_or_equals }
				check_variable = { var = CoC_anger value = 0 compare = less_than }
			}
		}
		#cost = 100
		fire_only_once = yes
		custom_cost_text = CoC_agitate_state_annex_cost
		days_re_enable = 1
		complete_effect = {
			hidden_effect = {
				multiply_variable = { ROOT.CoC_annex_cost = -1 }
				add_political_power = ROOT.CoC_annex_cost
				multiply_variable = { ROOT.CoC_annex_cost = -1 }
			}
			var:ROOT.CoC_agitated_state_var = {
				OWNER = {
					country_event = { id = RoF_CoC.011 days = 1 }
				}
			}
		}
		ai_will_do = {
			factor = 5
		}
	}
	annex_CoC_controlled_tag = {
		visible = {
			always = no
			has_government = radical
			has_country_flag = CoC_present
		}
		available = {
			any_neighbor_country = {
				NOT = { has_government = radical }
				if = {
					limit = { has_government = absolutist }
					custom_trigger_tooltip = {
						tooltip = CoC_annex_abs.tt
						check_variable = { var = CoC_strength value = 10 compare = greater_than_or_equals }
						check_variable = { var = CoC_anger value = 0 compare = greater_than_or_equals }
					}
				}
				if = {
					limit = { has_government = constitutionalist }
					custom_trigger_tooltip = {
						tooltip = CoC_annex_con.tt
						check_variable = { var = CoC_strength value = 15 compare = greater_than_or_equals }
						check_variable = { var = CoC_anger value = 5 compare = greater_than_or_equals }
					}
				}
				if = {
					limit = { has_government = neutrality }
					custom_trigger_tooltip = {
						tooltip = CoC_annex_neu.tt
						check_variable = { var = CoC_strength value = 15 compare = greater_than_or_equals }
						check_variable = { var = CoC_anger value = 5 compare = greater_than_or_equals }
					}
				}
				if = {
					limit = { has_government = liberal }
					custom_trigger_tooltip = {
						tooltip = CoC_annex_lib.tt
						check_variable = { var = CoC_strength value = 20 compare = greater_than_or_equals }
						check_variable = { var = CoC_anger value = 10 compare = greater_than_or_equals }
					}
				}
				num_of_controlled_states < 2
			}
		}
		cost = 200
		days_re_enable = 1
		complete_effect = {
			random_neighbor_country = {
				limit = {
					NOT = { has_government = radical }
					OR = {
						AND = {
							has_government = absolutist
							check_variable = { var = CoC_strength value = 10 compare = greater_than_or_equals }
							check_variable = { var = CoC_anger value = 0 compare = greater_than_or_equals }
						}
						AND = {
							has_government = constitutionalist
							check_variable = { var = CoC_strength value = 15 compare = greater_than_or_equals }
							check_variable = { var = CoC_anger value = 5 compare = greater_than_or_equals }
						}
						AND = {
							has_government = neutrality
							check_variable = { var = CoC_strength value = 15 compare = greater_than_or_equals }
							check_variable = { var = CoC_anger value = 5 compare = greater_than_or_equals }
						}
						AND = {
							has_government = liberal
							check_variable = { var = CoC_strength value = 20 compare = greater_than_or_equals }
							check_variable = { var = CoC_anger value = 10 compare = greater_than_or_equals }
						}
					}
					num_of_controlled_states < 2
				}
				country_event = { id = RoF.012 hours = 12 }
			}
		}
		ai_will_do = {
			factor = 5
		}
	}
}

RoF_CoC_Border_Clashes = {
	CoC_border_conflict_timer = {
		allowed = { always = no }
		available = { hidden_trigger = { always = no } }
		days_mission_timeout = 30
		is_good = no
		timeout_effect = {
			hidden_effect = {
				clear_CoC_vars_and_flags = yes
				FROM = {
					remove_targeted_decision = { target = ROOT decision = CoC_agitate_state_warning }
					remove_targeted_decision = { target = ROOT decision = CoC_agitate_progress_warning }
					remove_targeted_decision = { target = ROOT decision = CoC_agitate_state_counter }
				}
			}
			ROOT = {
				remove_targeted_decision = { target = FROM decision = CoC_border_conflict_start }
				set_country_flag = {
					flag = CoC_agitate_timer
					days = 60
					value = 1
				}
			}
		}
	}
	CoC_border_conflict_start = {
		icon = border_war
		visible = {
			FROM = { exists = yes }
			NOT = { has_war_with = FROM }
			FROM = { has_not_initiated_border_incident_with_ROOT = yes }
			FROM = {
				NOT = {
					is_subject_of = ROOT
				}
				NOT = {
					is_in_faction_with = ROOT
				}
			}
			NOT = {
				is_subject_of = FROM
			}

			OR = {
				NOT = { has_border_war_with = FROM }
				any_state = {
					is_owned_and_controlled_by = FROM
					hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
					any_neighbor_state = {
						hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
						is_fully_controlled_by = ROOT
					}
				}
			}
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = establish_CoC_neighbor.tt
				check_variable = { var = CoC_strength value = 10 compare = greater_than_or_equals }
				check_variable = { var = CoC_anger value = 0 compare = less_than }
			}
			any_state = {
				is_owned_and_controlled_by = FROM
				any_neighbor_state = {
					is_fully_controlled_by = ROOT
					set_temp_variable = { var:attacker_state_temp = id }
					has_ROOT_at_least_1_div_in_current_state_scope = yes
					hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
				}
				is_on_continent = europe
				NOT = { has_state_flag = border_incident_active }
				set_temp_variable = { var:defender_state_temp = id }
			}
			NOT = { has_non_aggression_pact_with = FROM }
		}
		target_trigger = {
			FROM = {
				has_variable = var:CoC_agitated_by
			}
		}
		highlight_states = {
			highlight_states_trigger = {
				OR = {
					state = FROM.defender_state_vs_@ROOT
					AND = {
						has_state_flag = CoC_agitating_by_@ROOT
					}
				}
			}
		}
		cost = 100
		days_remove = 30
		days_re_enable = 180

		war_with_target_on_remove = yes
		complete_effect = {
			hidden_effect = {
				random_state = {
					limit = {
						is_owned_and_controlled_by = FROM
						hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
						any_neighbor_state = {
							hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
							has_ROOT_at_least_1_div_in_current_state_scope = yes
							is_fully_controlled_by = ROOT
						}
					}
					save_event_target_as = defender_state
					set_variable = { FROM.defender_state_vs_@ROOT = id }
					set_temp_variable = { defender_state_temp = id }
					set_state_flag = border_incident_active
				}
				random_state = {
					limit = {
						is_fully_controlled_by = ROOT
						hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
						has_ROOT_at_least_1_div_in_current_state_scope = yes
						any_neighbor_state = {
							state = var:FROM.defender_state_vs_@ROOT
						}
					}
					save_event_target_as = attacker_state
					set_variable = { FROM.attacker_state_vs_@ROOT = id }
					set_temp_variable = { attacker_state_temp = id }
					set_state_flag = border_incident_active
				}
			}
			custom_effect_tooltip = CoC_border_incident_delay_until_new_incident_180
			FROM = {
				country_event = { id = RoF_CoC_conflicts.07 hours = 1 }
				activate_targeted_decision = { target = ROOT decision = CoC_border_conflict_incident_warning_defender }
			}
		}
		remove_effect = {
			hidden_effect = {
				var:FROM.defender_state_vs_@ROOT = {
					save_event_target_as = defender_state
				}
				var:FROM.attacker_state_vs_@ROOT = {
					save_event_target_as = attacker_state
				}
				random_state = {
					limit = {
						is_owned_and_controlled_by = FROM
						hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
						any_neighbor_state = {
							is_fully_controlled_by = ROOT
							has_ROOT_at_least_1_div_in_current_state_scope = yes
							hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
						}
					}
					set_temp_variable = { defender_state_temp = id }
				}
				random_state = {
					limit = {
						is_fully_controlled_by = ROOT
						hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
						has_ROOT_at_least_1_div_in_current_state_scope = yes
						any_neighbor_state = {
							state = var:FROM.defender_state_vs_@ROOT
						}
					}
					set_temp_variable = { attacker_state_temp = id }
				}
			}
			activate_targeted_decision = { target = FROM decision = CoC_escalate_incident_to_border_conflict }
		}
		ai_will_do = {
			base = 0
		}
	}
	CoC_border_conflict_incident_warning_defender = {

		icon = border_war

		allowed = { always = no } #Activated from effect

		available = {
			hidden_trigger = { always = no }
		}

		highlight_states = {
			highlight_states_trigger = {
				OR = {
					state = var:defender_state_temp
					state = var:ROOT.defender_state_vs_@FROM
				}
			}
		}

		war_with_target_on_timeout = yes
		ai_will_do = {
			base = 0
		}

		days_mission_timeout = 30

		fire_only_once = yes

		is_good = no

		timeout_effect = {
			custom_effect_tooltip = escalation_possible_tooltip_for_defender
			custom_effect_tooltip = effects_if_border_conflict_is_lost
			effect_tooltip = {
				add_political_power = -100
				var:ROOT.defender_state_vs_@FROM = { FROM = { transfer_state = PREV } }
			}
			hidden_effect = {
				remove_targeted_decision = { target = FROM decision = CoC_border_conflict_incident_warning_defender }
				activate_targeted_decision = { target = FROM decision = CoC_border_conflict_escalation_warning_defender }
			}
		}
	}
	CoC_border_conflict_escalation_warning_defender = {


		icon = border_war

		allowed = { always = no } #Activated from effect

		available = {
			hidden_trigger = { always = no }
		}

		highlight_states = {
			highlight_states_trigger = {
				OR = {
					state = var:defender_state_temp
					state = var:ROOT.defender_state_vs_@FROM
				}
			}
		}

		war_with_target_on_timeout = yes
		ai_will_do = {
			base = 0
		}

		days_mission_timeout = 30

		fire_only_once = yes

		is_good = no

		timeout_effect = {
			custom_effect_tooltip = from_cannot_escalate
			custom_effect_tooltip = effects_if_border_conflict_is_lost
			effect_tooltip = {
				add_political_power = -100
				var:ROOT.defender_state_vs_@FROM = { FROM = { transfer_state = PREV } }
			}
		}
	}
	CoC_escalate_incident_to_border_conflict = {

		icon = border_war

		allowed = { always = no } #Activated from effect

		available = {
			var:FROM.attacker_state_vs_@ROOT = {
				is_fully_controlled_by = ROOT
			}
			divisions_in_border_state = {
				state = var:FROM.attacker_state_vs_@ROOT
				border_state = var:FROM.defender_state_vs_@ROOT
				size > 0
			}
		}

		highlight_states = {
			highlight_states_trigger = {
				state = var:FROM.attacker_state_vs_@ROOT
			}
		}

		ai_will_do = {
			base = 0
		}

		cancel_trigger = {
			is_in_faction_with = FROM
		}

		selectable_mission = yes

		fire_only_once = yes #Reactivation handled in effect

		days_mission_timeout = 30

		timeout_effect = {
			custom_effect_tooltip = CoC_border_incident_delay_until_new_incident_120
			hidden_effect = {
				FROM = { remove_targeted_decision = { target = ROOT decision = CoC_border_conflict_escalation_warning_defender } }
				FROM = {
					var:attacker_state_vs_@ROOT = {
						clr_state_flag = border_incident_active
					}
					var:defender_state_vs_@ROOT = {
						clr_state_flag = border_incident_active
					}
					clear_variable = attacker_state_vs_@ROOT
					clear_variable = defender_state_vs_@ROOT
				}
			}
		}

		complete_effect = {
			start_border_war = {
				change_state_after_war = no
				attacker = {
					state = var:FROM.attacker_state_vs_@ROOT
					num_provinces = 4
					on_win = RoF_CoC_conflicts.01
					on_lose = RoF_CoC_conflicts.03
					on_cancel = RoF_CoC_conflicts.05
				}

				defender = {
					state = var:FROM.defender_state_vs_@ROOT
					num_provinces = 4
					on_win = RoF_CoC_conflicts.02
					on_lose = RoF_CoC_conflicts.04
					on_cancel = RoF_CoC_conflicts.06
				}
			}
			FROM = {
				activate_targeted_decision = { target = ROOT decision = CoC_border_conflict_escalate_conflict }
				activate_targeted_decision = { target = ROOT decision = CoC_border_conflict_time_until_cancelled }
			}
			activate_targeted_decision = { target = FROM decision = CoC_border_conflict_escalate_conflict }
			activate_targeted_decision = { target = FROM decision = CoC_border_conflict_time_until_cancelled }
		}
	}
	CoC_border_conflict_time_until_cancelled = {

		icon = border_war

		allowed = { always = no } #Activated from effect

		available = {
			var:FROM.defender_state_vs_@ROOT = { has_border_war = no }
			var:FROM.attacker_state_vs_@ROOT = { has_border_war = no }
		}

		highlight_states = {
			highlight_state_targets = {
				state = var:defender_state_temp
				state = var:FROM.defender_state_vs_@ROOT
			}
		}

		ai_will_do = {
			base = 0
		}

		days_mission_timeout = 360
		is_good = no

		fire_only_once = yes #Reactivation handled in effect

		complete_effect = {

		}

		timeout_effect = {
			if = {
				limit = { is_border_conflict_defender_vs_FROM = yes }
				cancel_border_war = {
					defender = var:defender_state_vs_@FROM
					attacker = var:attacker_state_vs_@FROM
				}
			}
			else = {
				cancel_border_war = {
					defender = var:FROM.defender_state_vs_@ROOT
					attacker = var:FROM.attacker_state_vs_@ROOT
				}
			}
			hidden_effect = {
				remove_targeted_decision = { target = FROM decision = CoC_border_conflict_escalate_conflict }
			}
		}
	}
	CoC_border_conflict_escalate_conflict = {

		icon = decision_generic_ignite_civil_war

		allowed = { always = no } #Activated from effect

		visible = {
			has_border_war_with = FROM
		}

		highlight_states = {
			highlight_state_targets = {
				state = var:FROM.attacker_state_vs_@ROOT
				state = var:ROOT.defender_state_vs_@FROM
			}
		}

		cost = 200

		ai_will_do = {
			base = 0
		}

		fire_only_once = yes #Reactivation handled in effect

		complete_effect = {
			if = {
				limit = { is_border_conflict_defender_vs_FROM = yes }
				set_border_war_data = {
					attacker = var:ROOT.defender_state_vs_@FROM
					defender = var:ROOT.defender_state_vs_@FROM
					defender_modifier = 0.15
					combat_width = 100
				}
			}
			else = {
				set_border_war_data = {
					attacker = var:FROM.defender_state_vs_@ROOT
					defender = var:FROM.defender_state_vs_@ROOT
					attacker_modifier = 0.15
					combat_width = 100
				}
			}
			FROM = {
				set_country_flag = {
					flag = CoC_border_conflict_escalate_to_war_cooldown_@ROOT
					days = 45
					value = 1
				}
				remove_targeted_decision = { target = ROOT decision = CoC_border_conflict_escalate_conflict }
			}
			set_country_flag = {
				flag = CoC_border_conflict_escalate_to_war_cooldown_@FROM
				days = 45
				value = 1
			}
			custom_effect_tooltip = in_45_days
			activate_targeted_decision = { target = FROM decision = CoC_border_conflict_escalate_to_war }
		}
	}
	CoC_border_conflict_escalate_to_war = {

		icon = decision_generic_ignite_civil_war

		allowed = { always = no } #Activated from effect

		visible = {
			NOT = { has_country_flag = CoC_border_conflict_escalate_to_war_cooldown_@FROM }
			has_border_war_with = FROM
		}

		highlight_states = {
			highlight_state_targets = {
				state = var:FROM.defender_state_vs_@ROOT
				state = var:ROOT.attacker_state_vs_@FROM
			}
		}

		cost = 150

		ai_will_do = {
			base = 0
		}

		days_remove = 15

		fire_only_once = yes #Reactivation handled in effect

		war_with_target_on_remove = yes

		complete_effect = {
			if = {
				limit = { is_border_conflict_defender_vs_FROM = yes }
				var:ROOT.defender_state_vs_@FROM = { save_event_target_as = their_state }
				var:ROOT.attacker_state_vs_@FROM = { save_event_target_as = our_state }
			}
			else = {
				var:FROM.defender_state_vs_@ROOT = { save_event_target_as = our_state }
				var:FROM.attacker_state_vs_@ROOT = { save_event_target_as = their_state }
			}
			FROM = {
				country_event = { id = RoF_CoC_conflicts.09 }
				hidden_effect = {
					remove_targeted_decision = { target = ROOT decision = CoC_border_conflict_escalate_to_war }
				}
		 	}
		}

		remove_effect = {
			cancel_border_war = {
				dont_fire_events = yes
				defender = var:FROM.defender_state_vs_@ROOT
				attacker = var:FROM.attacker_state_vs_@ROOT
			}
			declare_war_on = { target = FROM type = annex_everything }
			if = {
				limit = { is_border_conflict_defender_vs_FROM = yes }
				var:attacker_state_vs_@FROM = {
					clr_state_flag = border_incident_active
				}
				var:defender_state_vs_@FROM = {
					clr_state_flag = border_incident_active
				}
				clear_variable = attacker_state_vs_@FROM
				clear_variable = defender_state_vs_@FROM
			}
			else = {
				FROM = {
					var:attacker_state_vs_@ROOT = {
						clr_state_flag = border_incident_active
					}
					var:defender_state_vs_@ROOT = {
						clr_state_flag = border_incident_active
					}
					clear_variable = attacker_state_vs_@ROOT
					clear_variable = defender_state_vs_@ROOT
				}
			}
		}
	}
	CoC_border_conflict_back_out_of_conflict = {

		allowed = { always = no } #Activated from effect

		visible = {
			has_border_war_with = FROM
		}

		highlight_states = {
			highlight_state_targets = {
				state = var:FROM.attacker_state_vs_@ROOT
				state = var:ROOT.defender_state_vs_@FROM
			}
		}

		ai_will_do = {
			base = 0
		}

		fire_only_once = yes #Reactivation handled in effect

		complete_effect = {
			if = {
				limit = { is_border_conflict_defender_vs_FROM = yes }
				finalize_border_war = {
					attacker_win = yes
					attacker = ROOT.attacker_state_vs_@FROM
					defender = ROOT.attacker_state_vs_@FROM
				}
			}
			else = {
				finalize_border_war = {
					attacker = FROM.attacker_state_vs_@ROOT
					defender = FROM.attacker_state_vs_@ROOT
					defender_win = yes
				}
			}
		}
	}
}